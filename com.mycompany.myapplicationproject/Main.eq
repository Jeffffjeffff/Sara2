
/*
 * Main.eq
 * Generated by Eqela Studio 2.0b7.4
 */

public class Main : SEScene

{
	SESprite bg;
	SESprite bg2;
	SESprite text;
	bool move_right=true;
	bool move_left=false;
	bool move_down=false;
	bool move_up=true;
	int speed = 10;
	double rotation;
	String display;
	int bawns=0;

		public void initialize(SEResourceCache rsc)
	{
		base.initialize(rsc);
		bg = add_sprite_for_color(Color.instance("red"),get_scene_width(),get_scene_height());
		bg.move(0,0);
		

	   
		rsc.prepare_font("font","arial italic color=blue",80);
		display = "BOUNCES = %d".printf().add(Primitive.for_integer(bawns)).to_string();
		text = add_sprite_for_text(display,"font");
		text.move(0,get_scene_height()-text.get_height());
		rsc.prepare_image("myimage","UST_Main_Building",get_scene_width()*0.1);
		bg2 = add_sprite_for_image(SEImage.for_resource("myimage"));
		//bg2 = add_sprite_for_color(Color.instance("black"),100,200);
		bg2.move(50,50);
		}
		
			public void update (TimeVal now,double delta)
		{
			base.update(now,delta);
			speed+=1000;
			rotation+=MathConstant.M_PI_2;
			bg2.set_rotation(rotation);
		//	bg2.move(bg2.get_x()+delta*10,bg2.get_y());
			if(move_right) 
			{
				bg2.move(bg2.get_x()+delta*speed,bg2.get_y());
				if(bg2.get_x()+bg2.get_width() > get_scene_width())
				{
					speed=100;
					bawns++;
					display = "BOUNCES = %d".printf().add(Primitive.for_integer(bawns)).to_string();
					text.set_text(display);
					
			
					move_right=false;
					move_left=true;
				}
			}
			
			if(move_left) 
			{
				bg2.move(bg2.get_x()-delta*speed,bg2.get_y());
				if(bg2.get_x()<0)
				{
					bawns++;
					display = "BOUNCES = %d".printf().add(Primitive.for_integer(bawns)).to_string();
					text.set_text(display);
					speed=100;					
				
					move_right=true;
					move_left=false;
				}


			}
			if(move_down)
			{
				bg2.move(bg2.get_x(),bg2.get_y()+delta*speed);
				if(bg2.get_y()+bg2.get_height()>get_scene_height())
				{
					bawns++;
					display = "BOUNCES = %d".printf().add(Primitive.for_integer(bawns)).to_string();
					text.set_text(display);
					speed=100;					
				
					move_up=true;
					move_down=false;
				}
			}
			if(move_up)
			{
				bg2.move(bg2.get_x(),bg2.get_y()-delta*speed);
				if(bg2.get_y()<0)
				{
					bawns++;
					display = "BOUNCES = %d".printf().add(Primitive.for_integer(bawns)).to_string();
					text.set_text(display);
					speed=100;					
				
					move_up=false;
					move_down=true;
				}
			}
		}
		
		public void set_rotation(double angle)
		{
			rotation = angle;
			
		}
		public double get_rotation()
		{
			return(rotation);
		}

		
	

}
